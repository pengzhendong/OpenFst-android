name: OpenFST Android

on:
  push:
    branches: master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Build with Gradle
      run: ./gradlew assembleRelease

    - name: Prepare Release
      run: |
        mkdir -p app/release/include
        for android_abi in armeabi-v7a arm64-v8a x86 x86_64; do
          mkdir app/release/$android_abi
          cmake_binary_dir=app/.cxx/cmake/release/$android_abi
          gflags_binary_dir=$cmake_binary_dir/gflags-prefix/src/gflags-build
          glog_source_dir=$cmake_binary_dir/glog-prefix/src/glog
          glog_binary_dir=$cmake_binary_dir/glog-prefix/src/glog-build
          openfst_binary_dir=$cmake_binary_dir/openfst-prefix/src/openfst-build
          openfst_source_dir=$cmake_binary_dir/openfst-src

          cp -r $gflags_binary_dir/include/gflags app/release/include
          cp -r $glog_binary_dir/glog app/release/include
          cp $glog_source_dir/src/glog/log_severity.h app/release/include/glog
          cp -r $openfst_source_dir/src/include/fst app/release/include

          cp $gflags_binary_dir/lib/libgflags* app/release/$android_abi
          cp $glog_binary_dir/libglog.a app/release/$android_abi
          cp $openfst_binary_dir/src/lib/.libs/libfst.so* app/release/$android_abi
        done

    - name: Upload
      uses: actions/upload-artifact@v3
      with:
        path: app/release
